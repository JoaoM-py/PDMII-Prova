// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 2.19.2 (stable) (Tue Feb 7 18:37:17 2023 +0000) on "linux_x64"
// Module: zapp_user_main
// Flags: soundNullSafety(true), enableAsserts(true)
define('zapp_user_main', ['dart_sdk', 'flutter_sdk'], (function load__zapp_user_main(dart_sdk, flutter_sdk) {
  'use strict';
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const _interceptors = dart_sdk._interceptors;
  const js = dart_sdk.js;
  const ui = dart_sdk.ui;
  const _js_helper = dart_sdk._js_helper;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const app = flutter_sdk.src__material__app;
  const framework = flutter_sdk.src__widgets__framework;
  const editable_text = flutter_sdk.src__widgets__editable_text;
  const colors = flutter_sdk.src__material__colors;
  const scaffold = flutter_sdk.src__material__scaffold;
  const app_bar = flutter_sdk.src__material__app_bar;
  const text = flutter_sdk.src__widgets__text;
  const basic = flutter_sdk.src__widgets__basic;
  const alignment = flutter_sdk.src__painting__alignment;
  const scroll_view = flutter_sdk.src__widgets__scroll_view;
  const edge_insets = flutter_sdk.src__painting__edge_insets;
  const text_field = flutter_sdk.src__material__text_field;
  const text_input = flutter_sdk.src__services__text_input;
  const input_decorator = flutter_sdk.src__material__input_decorator;
  const icon = flutter_sdk.src__widgets__icon;
  const icon_data = flutter_sdk.src__widgets__icon_data;
  const input_border = flutter_sdk.src__material__input_border;
  const borders = flutter_sdk.src__painting__borders;
  const colors$ = flutter_sdk.src__painting__colors;
  const border_radius = flutter_sdk.src__painting__border_radius;
  const flex = flutter_sdk.src__rendering__flex;
  const elevated_button = flutter_sdk.src__material__elevated_button;
  const navigator = flutter_sdk.src__widgets__navigator;
  const page = flutter_sdk.src__material__page;
  const container = flutter_sdk.src__widgets__container;
  const text_style = flutter_sdk.src__painting__text_style;
  const checkbox_list_tile = flutter_sdk.src__material__checkbox_list_tile;
  const box_decoration = flutter_sdk.src__painting__box_decoration;
  const box_border = flutter_sdk.src__painting__box_border;
  const binding = flutter_sdk.src__widgets__binding;
  var $46zapp_entry = Object.create(dart.library);
  var main = Object.create(dart.library);
  var web_plugin_registrant = Object.create(dart.library);
  var $toString = dartx.toString;
  var $isNotEmpty = dartx.isNotEmpty;
  var $_get = dartx._get;
  var $_set = dartx._set;
  var $add = dartx.add;
  var $forEach = dartx.forEach;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(false);
  var T = {
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    ListOfString: () => (T.ListOfString = dart.constFn(core.List$(core.String)))(),
    ListOfStringTodynamic: () => (T.ListOfStringTodynamic = dart.constFn(dart.fnType(dart.dynamic, [T.ListOfString()])))(),
    JSArrayOfString: () => (T.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    dynamicToNull: () => (T.dynamicToNull = dart.constFn(dart.fnType(core.Null, [dart.dynamic])))(),
    VoidToNull: () => (T.VoidToNull = dart.constFn(dart.fnType(core.Null, [])))(),
    ObjectAndStackTraceTovoid: () => (T.ObjectAndStackTraceTovoid = dart.constFn(dart.fnType(dart.void, [core.Object, core.StackTrace])))(),
    ZoneAndZoneDelegateAndZone__Tovoid: () => (T.ZoneAndZoneDelegateAndZone__Tovoid = dart.constFn(dart.fnType(dart.void, [async.Zone, async.ZoneDelegate, async.Zone, core.String])))(),
    StringTovoid: () => (T.StringTovoid = dart.constFn(dart.fnType(dart.void, [core.String])))(),
    BuildContextToSecondPage: () => (T.BuildContextToSecondPage = dart.constFn(dart.fnType(main.SecondPage, [framework.BuildContext])))(),
    JSArrayOfWidget: () => (T.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))(),
    IdentityMapOfString$bool: () => (T.IdentityMapOfString$bool = dart.constFn(_js_helper.IdentityMap$(core.String, core.bool)))(),
    boolN: () => (T.boolN = dart.constFn(dart.nullable(core.bool)))(),
    boolNTovoid: () => (T.boolNTovoid = dart.constFn(dart.fnType(dart.void, [T.boolN()])))(),
    StringAndboolTovoid: () => (T.StringAndboolTovoid = dart.constFn(dart.fnType(dart.void, [core.String, core.bool])))(),
    BuildContextToConfirmPage: () => (T.BuildContextToConfirmPage = dart.constFn(dart.fnType(main.ConfirmPage, [framework.BuildContext])))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.fn(main.main, T.VoidTovoid());
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Shoe Store"
      });
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 8,
        [EdgeInsets_right]: 8,
        [EdgeInsets_top]: 8,
        [EdgeInsets_left]: 8
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 16,
        [SizedBox_width]: null
      });
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 60981
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: icon.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: null,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: null,
        [Icon_icon]: C[5] || CT.C5
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: borders.BorderStyle.prototype,
        [_Enum__name]: "solid",
        [_Enum_index]: 1
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293128957
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4290502395
      });
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4287679225
      });
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4284790262
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4282557941
      });
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4280391411
      });
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4280191205
      });
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4279858898
      });
    },
    get C19() {
      return C[19] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4279592384
      });
    },
    get C20() {
      return C[20] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4279060385
      });
    },
    get C10() {
      return C[10] = dart.constMap(core.int, ui.Color, [50, C[11] || CT.C11, 100, C[12] || CT.C12, 200, C[13] || CT.C13, 300, C[14] || CT.C14, 400, C[15] || CT.C15, 500, C[16] || CT.C16, 600, C[17] || CT.C17, 700, C[18] || CT.C18, 800, C[19] || CT.C19, 900, C[20] || CT.C20]);
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: colors.MaterialColor.prototype,
        [Color_value]: 4280391411,
        [ColorSwatch__swatch]: C[10] || CT.C10
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: borders.BorderSide.prototype,
        [BorderSide_strokeAlign]: -1,
        [BorderSide_style]: C[8] || CT.C8,
        [BorderSide_width]: 1,
        [BorderSide_color]: C[9] || CT.C9
      });
    },
    get C22() {
      return C[22] = dart.const({
        __proto__: ui.Radius.prototype,
        [Radius_y]: 4,
        [Radius_x]: 4
      });
    },
    get C21() {
      return C[21] = dart.const({
        __proto__: border_radius.BorderRadius.prototype,
        [BorderRadius_bottomRight]: C[22] || CT.C22,
        [BorderRadius_bottomLeft]: C[22] || CT.C22,
        [BorderRadius_topRight]: C[22] || CT.C22,
        [BorderRadius_topLeft]: C[22] || CT.C22
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: input_border.OutlineInputBorder.prototype,
        [InputBorder_borderSide]: C[7] || CT.C7,
        [OutlineInputBorder_borderRadius]: C[21] || CT.C21,
        [OutlineInputBorder_gapPadding]: 4
      });
    },
    get C23() {
      return C[23] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Enviar"
      });
    },
    get C24() {
      return C[24] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Cancelar"
      });
    },
    get C25() {
      return C[25] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 0,
        [SizedBox_width]: 0
      });
    },
    get C26() {
      return C[26] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Checkbox Sample"
      });
    },
    get C27() {
      return C[27] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 16,
        [EdgeInsets_right]: 16,
        [EdgeInsets_top]: 16,
        [EdgeInsets_left]: 16
      });
    },
    get C28() {
      return C[28] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Confirmação do pedido"
      });
    },
    get C32() {
      return C[32] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293457385
      });
    },
    get C33() {
      return C[33] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4291356361
      });
    },
    get C34() {
      return C[34] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4289058471
      });
    },
    get C35() {
      return C[35] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4286695300
      });
    },
    get C36() {
      return C[36] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4284922730
      });
    },
    get C37() {
      return C[37] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4283215696
      });
    },
    get C38() {
      return C[38] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4282622023
      });
    },
    get C39() {
      return C[39] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4281896508
      });
    },
    get C40() {
      return C[40] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4281236786
      });
    },
    get C41() {
      return C[41] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4279983648
      });
    },
    get C31() {
      return C[31] = dart.constMap(core.int, ui.Color, [50, C[32] || CT.C32, 100, C[33] || CT.C33, 200, C[34] || CT.C34, 300, C[35] || CT.C35, 400, C[36] || CT.C36, 500, C[37] || CT.C37, 600, C[38] || CT.C38, 700, C[39] || CT.C39, 800, C[40] || CT.C40, 900, C[41] || CT.C41]);
    },
    get C30() {
      return C[30] = dart.const({
        __proto__: colors.MaterialColor.prototype,
        [Color_value]: 4283215696,
        [ColorSwatch__swatch]: C[31] || CT.C31
      });
    },
    get C29() {
      return C[29] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: 24,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[30] || CT.C30,
        [TextStyle_inherit]: true
      });
    },
    get C42() {
      return C[42] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: 24,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[9] || CT.C9,
        [TextStyle_inherit]: true
      });
    }
  }, false);
  var C = Array(43).fill(void 0);
  var I = ["file:///zapp/project/lib/main.dart"];
  $46zapp_entry.runAppGuarded = function runAppGuarded() {
    async.runZonedGuarded(core.Null, dart.fn(() => {
      if (T.ListOfStringTodynamic().is(C[0] || CT.C0)) {
        T.ListOfStringTodynamic().as(C[0] || CT.C0)(T.JSArrayOfString().of([]));
      } else {
        (C[0] || CT.C0)();
      }
      if (js.context.hasProperty("__notifyFlutterRendered")) {
        async.Future.delayed(new core.Duration.new({milliseconds: 250})).then(core.Null, dart.fn(_ => {
          js.context.callMethod("__notifyFlutterRendered", [false]);
        }, T.dynamicToNull()));
      }
    }, T.VoidToNull()), dart.fn((e, stackTrace) => {
      if (js.context.hasProperty("zappHandlerUserError")) {
        js.context.callMethod("zappHandlerUserError", [e[$toString](), stackTrace.toString()]);
      }
    }, T.ObjectAndStackTraceTovoid()), {zoneSpecification: new async._ZoneSpecification.new({print: dart.fn((self, parent, zone, line) => {
          if (js.context.hasProperty("zappHandlerUserPrint")) {
            js.context.callMethod("zappHandlerUserPrint", [line]);
          }
        }, T.ZoneAndZoneDelegateAndZone__Tovoid())})});
  };
  $46zapp_entry.main = function main$() {
    return async.async(dart.void, function* main() {
      yield ui.webOnlyWarmupEngine({runApp: dart.fn(() => {
          $46zapp_entry.runAppGuarded();
        }, T.VoidToNull()), registerPlugins: dart.fn(() => {
          web_plugin_registrant.registerPlugins();
        }, T.VoidToNull())});
    });
  };
  main.MyApp = class MyApp extends framework.StatelessWidget {
    build(context) {
      return new app.MaterialApp.new({title: "Sample Input", home: new main.Forms.new()});
    }
    static ['_#new#tearOff']() {
      return new main.MyApp.new();
    }
  };
  (main.MyApp.new = function() {
    main.MyApp.__proto__.new.call(this);
    ;
  }).prototype = main.MyApp.prototype;
  dart.addTypeTests(main.MyApp);
  dart.addTypeCaches(main.MyApp);
  dart.setMethodSignature(main.MyApp, () => ({
    __proto__: dart.getMethods(main.MyApp.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main.MyApp, I[0]);
  main.Forms = class Forms extends framework.StatefulWidget {
    createState() {
      return new main.FormsState.new();
    }
    static ['_#new#tearOff']() {
      return new main.Forms.new();
    }
  };
  (main.Forms.new = function() {
    main.Forms.__proto__.new.call(this);
    ;
  }).prototype = main.Forms.prototype;
  dart.addTypeTests(main.Forms);
  dart.addTypeCaches(main.Forms);
  dart.setMethodSignature(main.Forms, () => ({
    __proto__: dart.getMethods(main.Forms.__proto__),
    createState: dart.fnType(main.FormsState, [])
  }));
  dart.setLibraryUri(main.Forms, I[0]);
  var textColor = dart.privateName(main, "FormsState.textColor");
  var textColorWarning = dart.privateName(main, "FormsState.textColorWarning");
  var borderColor = dart.privateName(main, "FormsState.borderColor");
  var envio = dart.privateName(main, "FormsState.envio");
  var _email = dart.privateName(main, "_email");
  var _senha = dart.privateName(main, "_senha");
  var _IsValid = dart.privateName(main, "_IsValid");
  var _IsVerificated = dart.privateName(main, "_IsVerificated");
  var _result = dart.privateName(main, "_result");
  var _cancelar = dart.privateName(main, "_cancelar");
  var Widget_key = dart.privateName(framework, "Widget.key");
  var Text_selectionColor = dart.privateName(text, "Text.selectionColor");
  var Text_textHeightBehavior = dart.privateName(text, "Text.textHeightBehavior");
  var Text_textWidthBasis = dart.privateName(text, "Text.textWidthBasis");
  var Text_semanticsLabel = dart.privateName(text, "Text.semanticsLabel");
  var Text_maxLines = dart.privateName(text, "Text.maxLines");
  var Text_textScaleFactor = dart.privateName(text, "Text.textScaleFactor");
  var Text_overflow = dart.privateName(text, "Text.overflow");
  var Text_softWrap = dart.privateName(text, "Text.softWrap");
  var Text_locale = dart.privateName(text, "Text.locale");
  var Text_textDirection = dart.privateName(text, "Text.textDirection");
  var Text_textAlign = dart.privateName(text, "Text.textAlign");
  var Text_strutStyle = dart.privateName(text, "Text.strutStyle");
  var Text_style = dart.privateName(text, "Text.style");
  var Text_textSpan = dart.privateName(text, "Text.textSpan");
  var Text_data = dart.privateName(text, "Text.data");
  var EdgeInsets_bottom = dart.privateName(edge_insets, "EdgeInsets.bottom");
  var EdgeInsets_right = dart.privateName(edge_insets, "EdgeInsets.right");
  var EdgeInsets_top = dart.privateName(edge_insets, "EdgeInsets.top");
  var EdgeInsets_left = dart.privateName(edge_insets, "EdgeInsets.left");
  var SingleChildRenderObjectWidget_child = dart.privateName(framework, "SingleChildRenderObjectWidget.child");
  var SizedBox_height = dart.privateName(basic, "SizedBox.height");
  var SizedBox_width = dart.privateName(basic, "SizedBox.width");
  var Icon_textDirection = dart.privateName(icon, "Icon.textDirection");
  var Icon_semanticLabel = dart.privateName(icon, "Icon.semanticLabel");
  var Icon_shadows = dart.privateName(icon, "Icon.shadows");
  var Icon_color = dart.privateName(icon, "Icon.color");
  var Icon_opticalSize = dart.privateName(icon, "Icon.opticalSize");
  var Icon_grade = dart.privateName(icon, "Icon.grade");
  var Icon_weight = dart.privateName(icon, "Icon.weight");
  var Icon_fill = dart.privateName(icon, "Icon.fill");
  var Icon_size = dart.privateName(icon, "Icon.size");
  var IconData_matchTextDirection = dart.privateName(icon_data, "IconData.matchTextDirection");
  var IconData_fontPackage = dart.privateName(icon_data, "IconData.fontPackage");
  var IconData_fontFamily = dart.privateName(icon_data, "IconData.fontFamily");
  var IconData_codePoint = dart.privateName(icon_data, "IconData.codePoint");
  var Icon_icon = dart.privateName(icon, "Icon.icon");
  var BorderSide_strokeAlign = dart.privateName(borders, "BorderSide.strokeAlign");
  var _Enum__name = dart.privateName(core, "_Enum._name");
  var _Enum_index = dart.privateName(core, "_Enum.index");
  var BorderSide_style = dart.privateName(borders, "BorderSide.style");
  var BorderSide_width = dart.privateName(borders, "BorderSide.width");
  var Color_value = dart.privateName(ui, "Color.value");
  var ColorSwatch__swatch = dart.privateName(colors$, "ColorSwatch._swatch");
  var BorderSide_color = dart.privateName(borders, "BorderSide.color");
  var InputBorder_borderSide = dart.privateName(input_border, "InputBorder.borderSide");
  var Radius_y = dart.privateName(ui, "Radius.y");
  var Radius_x = dart.privateName(ui, "Radius.x");
  var BorderRadius_bottomRight = dart.privateName(border_radius, "BorderRadius.bottomRight");
  var BorderRadius_bottomLeft = dart.privateName(border_radius, "BorderRadius.bottomLeft");
  var BorderRadius_topRight = dart.privateName(border_radius, "BorderRadius.topRight");
  var BorderRadius_topLeft = dart.privateName(border_radius, "BorderRadius.topLeft");
  var OutlineInputBorder_borderRadius = dart.privateName(input_border, "OutlineInputBorder.borderRadius");
  var OutlineInputBorder_gapPadding = dart.privateName(input_border, "OutlineInputBorder.gapPadding");
  main.FormsState = class FormsState extends framework.State$(main.Forms) {
    get textColor() {
      return this[textColor];
    }
    set textColor(value) {
      this[textColor] = value;
    }
    get textColorWarning() {
      return this[textColorWarning];
    }
    set textColorWarning(value) {
      this[textColorWarning] = value;
    }
    get borderColor() {
      return this[borderColor];
    }
    set borderColor(value) {
      this[borderColor] = value;
    }
    get envio() {
      return this[envio];
    }
    set envio(value) {
      this[envio] = value;
    }
    [_cancelar]() {
      this[_email].text = "";
      let email = this[_email].text;
      this.setState(dart.fn(() => {
        this[_result] = email;
      }, T.VoidTovoid()));
      this[_senha].text = "";
      let senha = this[_senha].text;
      this.setState(dart.fn(() => {
        this[_result] = senha;
      }, T.VoidTovoid()));
    }
    build(context) {
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: C[1] || CT.C1}), body: new basic.Align.new({alignment: alignment.Alignment.topCenter, child: new scroll_view.ListView.new({padding: C[2] || CT.C2, children: T.JSArrayOfWidget().of([C[3] || CT.C3, new basic.SizedBox.new({width: 300, child: new text_field.TextField.new({controller: this[_email], keyboardType: text_input.TextInputType.text, decoration: new input_decorator.InputDecoration.new({hintText: "Entre com user", prefixIcon: C[4] || CT.C4, enabledBorder: new input_border.OutlineInputBorder.new({borderSide: new borders.BorderSide.new({color: this.borderColor})}), focusedBorder: C[6] || CT.C6}), onChanged: dart.fn(_ => this.setState(dart.fn(() => {
                    this[_IsValid] = this[_email].text[$isNotEmpty] && this[_senha].text[$isNotEmpty] && this[_email].text === "teste" && this[_senha].text === "123";
                  }, T.VoidTovoid())), T.StringTovoid())})}), C[3] || CT.C3, new basic.SizedBox.new({width: 300, child: new text_field.TextField.new({controller: this[_senha], keyboardType: text_input.TextInputType.text, decoration: new input_decorator.InputDecoration.new({hintText: "Entre com senha", prefixIcon: C[4] || CT.C4, enabledBorder: new input_border.OutlineInputBorder.new({borderSide: new borders.BorderSide.new({color: this.borderColor})}), focusedBorder: C[6] || CT.C6}), onChanged: dart.fn(_ => this.setState(dart.fn(() => {
                    this[_IsValid] = this[_email].text[$isNotEmpty] && this[_senha].text[$isNotEmpty] && this[_email].text === "teste" && this[_senha].text === "123";
                  }, T.VoidTovoid())), T.StringTovoid())})}), C[3] || CT.C3, !this.envio ? new basic.SizedBox.new({width: 300, child: new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.spaceEvenly, children: T.JSArrayOfWidget().of([new elevated_button.ElevatedButton.new({onPressed: this[_IsValid] ? dart.fn(() => {
                        navigator.Navigator.push(dart.dynamic, context, new page.MaterialPageRoute.new({builder: dart.fn(context => new main.SecondPage.new(), T.BuildContextToSecondPage())}));
                      }, T.VoidTovoid()) : null, child: C[23] || CT.C23}), new elevated_button.ElevatedButton.new({onPressed: dart.bind(this, _cancelar), child: C[24] || CT.C24})])})}) : C[25] || CT.C25, C[3] || CT.C3])})})});
    }
    static ['_#new#tearOff']() {
      return new main.FormsState.new();
    }
  };
  (main.FormsState.new = function() {
    this[_email] = new editable_text.TextEditingController.new();
    this[_senha] = new editable_text.TextEditingController.new();
    this[_IsValid] = false;
    this[_IsVerificated] = false;
    this[textColor] = colors.Colors.black;
    this[textColorWarning] = colors.Colors.grey;
    this[borderColor] = colors.Colors.grey;
    this[_result] = "";
    this[envio] = false;
    main.FormsState.__proto__.new.call(this);
    ;
  }).prototype = main.FormsState.prototype;
  dart.addTypeTests(main.FormsState);
  dart.addTypeCaches(main.FormsState);
  dart.setMethodSignature(main.FormsState, () => ({
    __proto__: dart.getMethods(main.FormsState.__proto__),
    [_cancelar]: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main.FormsState, I[0]);
  dart.setFieldSignature(main.FormsState, () => ({
    __proto__: dart.getFields(main.FormsState.__proto__),
    [_email]: dart.finalFieldType(editable_text.TextEditingController),
    [_senha]: dart.finalFieldType(editable_text.TextEditingController),
    [_IsValid]: dart.fieldType(core.bool),
    [_IsVerificated]: dart.fieldType(core.bool),
    textColor: dart.fieldType(ui.Color),
    textColorWarning: dart.fieldType(ui.Color),
    borderColor: dart.fieldType(ui.Color),
    [_result]: dart.fieldType(core.String),
    envio: dart.fieldType(core.bool)
  }));
  main.SecondPage = class SecondPage extends framework.StatefulWidget {
    createState() {
      return new main.SecondPageState.new();
    }
    static ['_#new#tearOff']() {
      return new main.SecondPage.new();
    }
  };
  (main.SecondPage.new = function() {
    main.SecondPage.__proto__.new.call(this);
    ;
  }).prototype = main.SecondPage.prototype;
  dart.addTypeTests(main.SecondPage);
  dart.addTypeCaches(main.SecondPage);
  dart.setMethodSignature(main.SecondPage, () => ({
    __proto__: dart.getMethods(main.SecondPage.__proto__),
    createState: dart.fnType(main.SecondPageState, [])
  }));
  dart.setLibraryUri(main.SecondPage, I[0]);
  var first = dart.privateName(main, "SecondPageState.first");
  var _selectItens = dart.privateName(main, "_selectItens");
  var _buildCheckboxes = dart.privateName(main, "_buildCheckboxes");
  var _showFirstSelected = dart.privateName(main, "_showFirstSelected");
  main.SecondPageState = class SecondPageState extends framework.State$(main.SecondPage) {
    get first() {
      return this[first];
    }
    set first(value) {
      this[first] = value;
    }
    build(context) {
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: C[26] || CT.C26}), body: new container.Container.new({padding: C[27] || CT.C27, child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: T.JSArrayOfWidget().of([new text.Text.new("Quais tecnologias mobile você conhece?", {style: new text_style.TextStyle.new({fontWeight: ui.FontWeight.bold, fontSize: 16})}), new basic.Column.new({children: this[_buildCheckboxes]()})])})})});
    }
    [_buildCheckboxes]() {
      let firstCheckboxes = T.JSArrayOfWidget().of([]);
      this.first[$forEach](dart.fn((key, value) => {
        firstCheckboxes[$add](new checkbox_list_tile.CheckboxListTile.new({title: new text.Text.new(key), value: value, onChanged: dart.fn(newValue => {
            this.setState(dart.fn(() => {
              let t2, t1, t0, t2$, t1$, t0$, t2$0, t1$0, t0$0;
              newValue != null ? this.first[$_get](key) === true ? (t0 = this.first, t1 = key, t2 = false, t0[$_set](t1, t2), t2) : (t0$ = this.first, t1$ = key, t2$ = true, t0$[$_set](t1$, t2$), t2$) : (t0$0 = this.first, t1$0 = key, t2$0 = false, t0$0[$_set](t1$0, t2$0), t2$0);
            }, T.VoidTovoid()));
          }, T.boolNTovoid())}));
      }, T.StringAndboolTovoid()));
      firstCheckboxes[$add](new elevated_button.ElevatedButton.new({onPressed: dart.fn(() => {
          this[_showFirstSelected]();
          navigator.Navigator.push(dart.dynamic, this.context, new page.MaterialPageRoute.new({builder: dart.fn(context => new main.ConfirmPage.new({itensSelected: this[_selectItens]}), T.BuildContextToConfirmPage())}));
        }, T.VoidTovoid()), child: C[23] || CT.C23}));
      return firstCheckboxes;
    }
    [_showFirstSelected]() {
      let selected = T.JSArrayOfString().of([]);
      this[_selectItens] = selected;
      this.first[$forEach](dart.fn((key, value) => {
        if (value) {
          selected[$add](key);
        }
      }, T.StringAndboolTovoid()));
    }
    static ['_#new#tearOff']() {
      return new main.SecondPageState.new();
    }
  };
  (main.SecondPageState.new = function() {
    this[_selectItens] = T.JSArrayOfString().of([]);
    this[first] = new (T.IdentityMapOfString$bool()).from(["Flutter", false, "React Native", false, "Ionic", false, "Kotlin", false, "Java", false]);
    main.SecondPageState.__proto__.new.call(this);
    ;
  }).prototype = main.SecondPageState.prototype;
  dart.addTypeTests(main.SecondPageState);
  dart.addTypeCaches(main.SecondPageState);
  dart.setMethodSignature(main.SecondPageState, () => ({
    __proto__: dart.getMethods(main.SecondPageState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    [_buildCheckboxes]: dart.fnType(core.List$(framework.Widget), []),
    [_showFirstSelected]: dart.fnType(dart.void, [])
  }));
  dart.setLibraryUri(main.SecondPageState, I[0]);
  dart.setFieldSignature(main.SecondPageState, () => ({
    __proto__: dart.getFields(main.SecondPageState.__proto__),
    [_selectItens]: dart.fieldType(core.List$(core.String)),
    first: dart.fieldType(core.Map$(core.String, core.bool))
  }));
  var itensSelected$ = dart.privateName(main, "ConfirmPage.itensSelected");
  var TextStyle_overflow = dart.privateName(text_style, "TextStyle.overflow");
  var TextStyle_fontVariations = dart.privateName(text_style, "TextStyle.fontVariations");
  var TextStyle_fontFeatures = dart.privateName(text_style, "TextStyle.fontFeatures");
  var TextStyle_shadows = dart.privateName(text_style, "TextStyle.shadows");
  var TextStyle_debugLabel = dart.privateName(text_style, "TextStyle.debugLabel");
  var TextStyle_decorationThickness = dart.privateName(text_style, "TextStyle.decorationThickness");
  var TextStyle_decorationStyle = dart.privateName(text_style, "TextStyle.decorationStyle");
  var TextStyle_decorationColor = dart.privateName(text_style, "TextStyle.decorationColor");
  var TextStyle_decoration = dart.privateName(text_style, "TextStyle.decoration");
  var TextStyle_background = dart.privateName(text_style, "TextStyle.background");
  var TextStyle_foreground = dart.privateName(text_style, "TextStyle.foreground");
  var TextStyle_locale = dart.privateName(text_style, "TextStyle.locale");
  var TextStyle_leadingDistribution = dart.privateName(text_style, "TextStyle.leadingDistribution");
  var TextStyle_height = dart.privateName(text_style, "TextStyle.height");
  var TextStyle_textBaseline = dart.privateName(text_style, "TextStyle.textBaseline");
  var TextStyle_wordSpacing = dart.privateName(text_style, "TextStyle.wordSpacing");
  var TextStyle_letterSpacing = dart.privateName(text_style, "TextStyle.letterSpacing");
  var TextStyle_fontStyle = dart.privateName(text_style, "TextStyle.fontStyle");
  var TextStyle_fontWeight = dart.privateName(text_style, "TextStyle.fontWeight");
  var TextStyle_fontSize = dart.privateName(text_style, "TextStyle.fontSize");
  var TextStyle__package = dart.privateName(text_style, "TextStyle._package");
  var TextStyle__fontFamilyFallback = dart.privateName(text_style, "TextStyle._fontFamilyFallback");
  var TextStyle_fontFamily = dart.privateName(text_style, "TextStyle.fontFamily");
  var TextStyle_backgroundColor = dart.privateName(text_style, "TextStyle.backgroundColor");
  var TextStyle_color = dart.privateName(text_style, "TextStyle.color");
  var TextStyle_inherit = dart.privateName(text_style, "TextStyle.inherit");
  main.ConfirmPage = class ConfirmPage extends framework.StatelessWidget {
    get itensSelected() {
      return this[itensSelected$];
    }
    set itensSelected(value) {
      super.itensSelected = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let itensSelected = opts && 'itensSelected' in opts ? opts.itensSelected : null;
      return new main.ConfirmPage.new({key: key, itensSelected: itensSelected});
    }
    build(context) {
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: C[28] || CT.C28}), body: new basic.Align.new({alignment: alignment.Alignment.center, child: new container.Container.new({width: 600, height: 200, decoration: new box_decoration.BoxDecoration.new({border: box_border.Border.all({color: colors.Colors.grey, width: 1})}), child: new scroll_view.ListView.new({padding: C[2] || CT.C2, children: T.JSArrayOfWidget().of([new text.Text.new(this.itensSelected[$toString](), {style: C[29] || CT.C29}), new text.Text.new("Informações enviadas ao servidor", {style: C[42] || CT.C42})])})})})});
    }
  };
  (main.ConfirmPage.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let itensSelected = opts && 'itensSelected' in opts ? opts.itensSelected : null;
    this[itensSelected$] = itensSelected;
    main.ConfirmPage.__proto__.new.call(this, {key: key});
    ;
  }).prototype = main.ConfirmPage.prototype;
  dart.addTypeTests(main.ConfirmPage);
  dart.addTypeCaches(main.ConfirmPage);
  dart.setMethodSignature(main.ConfirmPage, () => ({
    __proto__: dart.getMethods(main.ConfirmPage.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main.ConfirmPage, I[0]);
  dart.setFieldSignature(main.ConfirmPage, () => ({
    __proto__: dart.getFields(main.ConfirmPage.__proto__),
    itensSelected: dart.finalFieldType(core.List$(core.String))
  }));
  main.main = function main$0() {
    binding.runApp(new main.MyApp.new());
  };
  web_plugin_registrant.registerPlugins = function registerPlugins() {
  };
  dart.trackLibraries("zapp_user_main", {
    "file:///zapp/project/.zapp_entry.dart": $46zapp_entry,
    "file:///zapp/project/lib/main.dart": main,
    "file:///zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart": web_plugin_registrant
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["/zapp/project/.zapp_entry.dart","/zapp/project/lib/main.dart","/zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart"],"names":[],"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","file":"main.js"}');
  // Exports:
  return {
    zapp__project__$46zapp_entry: $46zapp_entry,
    zapp__project__lib__main: main,
    zapp__project__$46dart_tool__dartpad__web_plugin_registrant: web_plugin_registrant
  };
}));

//# sourceMappingURL=main.js.map
